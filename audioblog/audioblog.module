<?php
/**
 * @file Enables users to create and access audio blog entries via telephone
 */

foreach (array('audioblog.prompts.inc', 'audioblog.scripts.inc') as $file) {
  require_once(dirname(__FILE__) . DIRECTORY_SEPARATOR . $file);
}

/**
 * Constant definitions
 */

// TODO: move the following constants to the admin/setup area

// General parameters

define('AUDIOBLOG_MAX_STORY_DURATION', 300); // 300 seconds


// Email parameters

define('AUDIOBLOG_EMAIL_SUBJECT', 'New AUDIOBLOG story of type: @story_type');

define('AUDIOBLOG_EMAIL_BODY', "story_type: @story_type,\ncall_id: @call_id,\ncaller_number: @caller_number,\nstart_time: @start_time,\nrecording_url: @recording_url,\nrecording_duration: @recording_duration");


// Audio blog parameters

define('AUDIOBLOG_BLOG_TITLE', 'New AUDIOBLOG story of type: @story_type');

define('AUDIOBLOG_BLOG_BODY', "story_type: @story_type,\ncall_id: @call_id,\ncaller_number: @caller_number,\nstart_time: @start_time,\nrecording_url: @recording_url,\nrecording_duration: @recording_duration");



/**
 * Implementation of hook_perm().
 */
function audioblog_perm() {
  return array('administer audioblog');
}

/*
 * Implementation of hook_menu()
 */
function audioblog_menu() {
  $items = array();

  $items['admin/settings/audioblog'] = array(
    'title' => 'Audioblog',
    'description' => 'audioblog configuration.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('audioblog_admin_form', NULL),
    'access arguments' => array('administer audioblog'),
  );

  return $items;
}

function audioblog_admin_form($configuration) {
  $form['audioblog_email'] = array(
    '#type' => 'textfield',
    '#title' => t('Audio blog destination email'),
    '#description' => t("The email address(es) to send the recorded stories to. If empty, no email messages will be sent."),
    '#default_value' => variable_get('audioblog_email', ''),
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save'),
  );

  return $form;
}

function audioblog_admin_form_submit($form, &$form_state) {
  if ($form_state['values']['audioblog_email']) {
    drupal_set_message(t('Story destination email updated.'));
    variable_set('audioblog_email', $form_state['values']['audioblog_email']);
  }
}

/**
 * Process newly recorded audioblog entries
 */
function audioblog_recording_callback($story_type, $call_id, $recording_url, $recording_duration) {

  $call_nid = VoipCall::getCidFromCallId($call_id);
  $call = VoipCall::load($call_nid);
  $caller_number = $call->getCallerNumber();
  $start_time = $call->getStartTime();

  $rc = TRUE;

  // Log call blast with watchdog
  $log_message = t("(New audioblog recorded) story_type: $story_type, call_id: $call_id, caller_number: $caller_number, start_time: $start_time, recording_url: $recording_url, recording_duration: $recording_duration");
  watchdog('audioblog', $log_message);

  // send email notification
  $params = array('story_type' => $story_type, 
                  'call_id'=> $call_id, 
                  'caller_number' => $caller_number,
                  'start_time' => $start_time,
                  'recording_url' => $recording_url, 
                  'recording_duration' => $recording_duration);
  $to = variable_get('audioblog_email');
  if($to) {
    $mail=drupal_mail('audioblog', 'new_recording', $to, language_default(), $params);
    $rc = $mail['result'];
  }

  // create audioblog entry
  if($rc) {
    audioblog_create_audioblog_node($recording_url, $params);
  }

  
  if ($rc){
    return t('Success.');
  }
  else {
    return t('Failure');
  }
}


/**
 * Implementation of hook_mail
 */
function audioblog_mail($key, &$message, $params) {

 switch ($key) {
   case 'new_recording':
     $options = array('@story_type' => $params['story_type'],
                  '@call_id'=> $params['call_id'], 
                  '@caller_number' => $params['caller_number'],
                  '@start_time' => $params['start_time'],
                  '@recording_url' => $params['recording_url'], 
                  '@recording_duration' => $params['recording_duration']);
     $message['subject'] = t(TIMENESIA_EMAIL_SUBJECT, $options);
     $message['body'] = t(TIMENESIA_EMAIL_BODY, $options);
   break;
  }
}

/**
 * Convert URL into an audiofield
 */
function audioblog_create_audioblog_node($url, $params=array()) {
  require(dirname(__FILE__) . DIRECTORY_SEPARATOR . 'idepsca_prompts.inc');

  $node->type = 'story';
  $node->promote = 1;
  $options = array('@story_type' => $params['story_type'],
               '@call_id'=> $params['call_id'], 
               '@caller_number' => $params['caller_number'],
               '@start_time' => $params['start_time'],
               '@recording_url' => $params['recording_url'], 
               '@recording_duration' => $params['recording_duration']);
  $node->title = t(TIMENESIA_BLOG_TITLE, $options);
  $node->body = t(TIMENESIA_BLOG_BODY, $options);
  $node->field_story_type[0]['value'] = $params['story_type'];
  $file = _audioblog_transfer_file($url);
  if($file) {
    $node->field_audio_story[1]['fid'] = $file['fid'];
  }
  node_save($node);
  return $node;
}

function _audioblog_transfer_file($url, $validators=array()) {
    $filename = rawurldecode(basename($url));
    $filepath = file_create_filename($filename, file_directory_temp());

    // Then make the actual request to download the file.
    $data = file_get_contents($url);

    //Save it to temporary file.
    if ($fp = @fopen($filepath, 'w+')) {
        fputs($fp, $data);
        fclose($fp);
    }

    //Save it to default files directory.
    $destination=file_directory_path();
    $file = field_file_save_file($filepath, $validators, $destination);

    // Delete the temporary file.
    @unlink($filepath);

    if ($file) {
        return $file;
    }

    return NULL;
}

